<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
    creationComplete="onCreationComplete();">

    <mx:Metadata>
         [Event(name="select", type="flash.events.Event")]
    </mx:Metadata>

    <mx:Script>
        <![CDATA[
            import com.danorlando.model.ImageData;
            import com.danorlando.controller.GalleryDataManager;
            import com.danorlando.events.ImageLoadEvent;
            import com.danorlando.controller.ImageLoadQueue;

            import mx.collections.ArrayCollection;
            import mx.managers.CursorManager;
            import flash.filesystem.File;

            private var _queue:ImageLoadQueue;

            private var _browseFile:File;

            private var _heldSelectedIndex:int = 0;
            private var _selectLastFileOnComplete:Boolean = false;

            [Bindable]
            private var _columnCount:int;

            private function onCreationComplete():void {
                _queue = new ImageLoadQueue();
                _queue.addEventListener( ImageLoadEvent.LOAD, onImageFileLoad );
                _queue.addEventListener( ImageLoadQueue.COMPLETE, onFileQueueComplete );
                
                _browseFile = new File();
                _browseFile.addEventListener( Event.SELECT, onDirectorySelect );
                
                GalleryDataManager.getInstance().addEventListener(GalleryDataManager.INDEX_CHANGE, onGalleryIndexChange );
                
                onResize();
            }

            private function onDirectorySelect( evt:Event ):void {
                CursorManager.setBusyCursor();
                _queue.addFiles( _browseFile.getDirectoryListing() );
                _queue.loadAll();
            }

            private function onImageFileLoad( evt:ImageLoadEvent ):void {
                GalleryDataManager.getInstance().addImage( evt.imageData );
            }

            private function onFileQueueComplete( evt:Event ):void {
                if( _selectLastFileOnComplete ) {
                    GalleryDataManager.getInstance().currentIndex = thumbGallery.dataProvider.length - 1;
                    _selectLastFileOnComplete = false;
                }
                else {
                    GalleryDataManager.getInstance().currentIndex = Math.max( 0, _heldSelectedIndex );
                }
                CursorManager.removeBusyCursor();
            }

            private function onGalleryIndexChange( evt:Event ):void {
                var scrollPos:int = thumbGallery.horizontalScrollPosition;
                thumbGallery.horizontalScrollPosition = 0;
                var currIndex:int = thumbGallery.selectedIndex = GalleryDataManager.getInstance().currentIndex;
                if( currIndex > scrollPos + _columnCount - 1 ) {
                    thumbGallery.horizontalScrollPosition = currIndex - _columnCount + 1;
                }
                else if( currIndex < scrollPos ) {
                    thumbGallery.horizontalScrollPosition = currIndex;
                }
                else {
                    thumbGallery.horizontalScrollPosition = scrollPos;
                }
                enableControls();
                onThumbSelect();
            }

            private function onBrowseBack( evt:MouseEvent ):void {
                if( thumbGallery.horizontalScrollPosition > 0 ) {
                    try {
                        thumbGallery.horizontalScrollPosition = thumbGallery.horizontalScrollPosition - 1;
                    }
                    catch( e:Error ) {
                        thumbGallery.horizontalScrollPosition = 0;
                        thumbGallery.horizontalScrollPosition = thumbGallery.selectedIndex - _columnCount;
                    }
                }
                enableControls();
            }
            
            private function onBrowseForward( evt:MouseEvent ):void {
                if( thumbGallery.horizontalScrollPosition < GalleryDataManager.getInstance().list.length - _columnCount ) {
                    thumbGallery.horizontalScrollPosition += 1;
                }
                enableControls();
            }

            private function onResize( evt:Event = null ):void {
                _columnCount = Math.ceil(thumbGallery.width/thumbGallery.height);
                thumbGallery.columnWidth = thumbGallery.rowHeight = Math.min( width / _columnCount, thumbGallery.height - 2 );
                thumbGallery.horizontalScrollPosition = 0;
                enableControls();
            }

            private function onThumbSelect( evt:Event = null ):void {
                dispatchEvent( new Event( Event.SELECT ) );
            }

            private function enableControls():void {
                var scrollPos:int = thumbGallery.horizontalScrollPosition;
                var len:int = GalleryDataManager.getInstance().list.length
                prevControl.enabled = scrollPos > 0;
                nextControl.enabled = scrollPos < len - _columnCount;
            }

            public function addFiles( files:Array, select:Boolean = false ):void {
                CursorManager.setBusyCursor();
                _selectLastFileOnComplete = select;
                _heldSelectedIndex = thumbGallery.selectedIndex;
                _queue.addFiles( files );
                _queue.loadAll();
            }

            public function get selectedImage():ImageData {
                return ( ( thumbGallery.dataProvider as ArrayCollection ).getItemAt( GalleryDataManager.getInstance().currentIndex ) as ImageData );
            }
            
        ]]>
    </mx:Script>

    <mx:VBox width="100%" height="100%" verticalGap="0">

        <mx:HBox width="100%" height="100%"
            verticalAlign="middle" horizontalGap="2"
            paddingLeft="5" paddingRight="5" paddingTop="5" paddingBottom="5"
            backgroundColor="0xCCCCCC">

            <mx:Box id="prevControl" backgroundColor="0xCCCCCC">
                <mx:Image id="previousButton" source="@Embed(source='/assets/previous_up.png')" click="onBrowseBack( event );" />    
            </mx:Box>

            <mx:HorizontalList id="thumbGallery"
                width="100%" height="100%" 
                paddingLeft="5" paddingRight="5"
                horizontalScrollPolicy="off"
                itemRenderer="com.danorlando.view.components.itemRenderers.Thumbnail"
                dataProvider="{GalleryDataManager.getInstance().list}"
                resize="onResize( event );"
                change="{GalleryDataManager.getInstance().currentIndex = thumbGallery.selectedIndex}" 
                />

            <mx:Box id="nextControl" backgroundColor="0xCCCCCC">
                <mx:Image id="nextButton" source="@Embed(source='/assets/next_up.png')" click="onBrowseForward( event );" />
            </mx:Box>

        </mx:HBox>

    </mx:VBox>

</mx:Canvas>